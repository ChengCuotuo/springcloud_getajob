<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nianzuochen.getajob.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="cn.nianzuochen.getajob.domain.dao.UserInfo">
    <id column="userId" jdbcType="INTEGER" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="identifier" jdbcType="VARCHAR" property="identifier" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="roleId" jdbcType="INTEGER" property="roleid" />
  </resultMap>
  <sql id="Base_Column_List">
    userId, identifier, identifier, username, password, cname, roleId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userinfo
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from userinfo
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="userid" parameterType="cn.nianzuochen.getajob.domain.dao.UserInfo">
    insert into userinfo (userId, identifier, username, password,
      cname, roleId)
    values (#{userid,jdbcType=INTEGER}, #{identifier,jdbcType=VARCHAR} #{username,jdbcType=VARCHAR},
     #{password,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR}, #{roleid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="userid" parameterType="cn.nianzuochen.getajob.domain.dao.UserInfo">
    insert into userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userId,
      </if>
      <if test="identifier != null">
        identifier,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="roleid != null">
        roleId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="identifier != null">
        #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.nianzuochen.getajob.domain.dao.UserInfo">
    update userinfo
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="identifier != null">
        identifier = #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null">
        roleId = #{roleid,jdbcType=INTEGER},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.nianzuochen.getajob.domain.dao.UserInfo">
    update userinfo
    set username = #{username,jdbcType=VARCHAR},
      identifier = #{identifier,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      cname = #{cname,jdbcType=VARCHAR},
      roleId = #{roleid,jdbcType=INTEGER}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <select id="selectUserByUsername" resultMap="lazyLoadRoles">
    select
    <include refid="Base_Column_List" />
    from userinfo
    where username = #{username,jdbcType=INTEGER}
  </select>
  <resultMap id="lazyLoadRoles" type="cn.nianzuochen.getajob.domain.dao.UserInfo">
    <id column="userid" property="userid"/>
    <id column="identifier" property="identifier"/>
    <id column="username" property="username"/>
    <id column="password" property="password"/>
    <id column="cname" property="cname"/>
    <id column="roleId" property="roleid"/>
    <collection property="roleInfos" ofType="cn.nianzuochen.getajob.domain.dao.RoleInfo"
                select="cn.nianzuochen.getajob.mapper.RoleInfoMapper.selectByPrimaryKey"
                column="roleId">
    </collection>

  </resultMap>
    <select id="selectByIdentifier" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from userinfo
      where identifier = #{identifier,jdbcType=VARCHAR}
    </select>
</mapper>