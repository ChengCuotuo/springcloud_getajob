<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nianzuochen.getajob.mapper.OperatelogMapper">
  <resultMap id="BaseResultMap" type="cn.nianzuochen.getajob.domain.dao.OperateLog">
    <id column="operateId" jdbcType="INTEGER" property="operateId" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="operateName" jdbcType="VARCHAR" property="operateName" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="operateDesc" jdbcType="VARCHAR" property="operateDesc" />
    <result column="operateTime" jdbcType="TIMESTAMP" property="operateTime" />
    <result column="isDeleted" jdbcType="TIMESTAMP" property="isDeleted" />
  </resultMap>
  <sql id="Base_Column_List">
    operateId, userId, operateName, cname, operateDesc, operateTime, isDeleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from operatelog
    where operateId = #{operateid,jdbcType=INTEGER} and isDeleted = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from operatelog
    where operateId = #{operateid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.nianzuochen.getajob.domain.dao.OperateLog">
    insert into operatelog (operateId, userId, operateName, 
      cname, operateDesc, operateTime
      )
    values (#{operateId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{operateName,jdbcType=VARCHAR},
      #{cname,jdbcType=VARCHAR}, #{operateDesc,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.nianzuochen.getajob.domain.dao.OperateLog">
    insert into operatelog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="operateId != null">
        operateId,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="operateName != null">
        operateName,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="operateDesc != null">
        operateDesc,
      </if>
      <if test="operateTime != null">
        operateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="operateId != null">
        #{operateId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="operateName != null">
        #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="operateDesc != null">
        #{operateDesc,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.nianzuochen.getajob.domain.dao.OperateLog">
    update operatelog
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="operateName != null">
        operateName = #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="operateDesc != null">
        operateDesc = #{operateDesc,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        operateTime = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        isDeleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where operateId = #{operateId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.nianzuochen.getajob.domain.dao.OperateLog">
    update operatelog
    set userId = #{userId,jdbcType=INTEGER},
      operateName = #{operateName,jdbcType=VARCHAR},
      cname = #{cname,jdbcType=VARCHAR},
      operateDesc = #{operateDesc,jdbcType=VARCHAR},
      operateTime = #{operateTime,jdbcType=TIMESTAMP},
      isDeleted = #{isDeleted,jdbcType=INTEGER}
    where operateId = #{operateId,jdbcType=INTEGER}
  </update>
    <select id="selectAllOperateLog" resultMap="BaseResultMap">
      select * from operatelog
      where isDeleted = 0
      <if test="operateLogReq.startDate!=null and operateLogReq.endDate!=null">
        and operateTime between #{operateLogReq.startDate,jdbcType=TIMESTAMP} and #{operateLogReq.endDate,jdbcType=TIMESTAMP}
      </if>
      order by operateTime desc
      limit #{operateLogReq.start,jdbcType=INTEGER}, #{operateLogReq.size,jdbcType=INTEGER}
    </select>
  <select id="countSelectOperateLogs" resultType="int">
    select count(operateId) from operatelog
    where isDeleted = 0
    <if test="operateLogReq.startDate!=null and operateLogReq.endDate!=null">
      and operateTime between #{operateLogReq.startDate,jdbcType=TIMESTAMP} and #{operateLogReq.endDate,jdbcType=TIMESTAMP}
    </if>
  </select>
</mapper>