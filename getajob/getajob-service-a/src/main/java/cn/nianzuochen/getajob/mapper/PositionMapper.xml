<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nianzuochen.getajob.mapper.PositionMapper">
  <resultMap id="BaseResultMap" type="cn.nianzuochen.getajob.domain.dao.Position">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="eid" jdbcType="INTEGER" property="eid" />
    <result column="edu" jdbcType="VARCHAR" property="edu" />
    <result column="salary" jdbcType="INTEGER" property="salary" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="languange" jdbcType="VARCHAR" property="languange" />
    <result column="agerange" jdbcType="VARCHAR" property="agerange" />
    <result column="des" jdbcType="VARCHAR" property="des" />
    <result column="classify" jdbcType="VARCHAR" property="classify" />
    <result column="mid" jdbcType="INTEGER" property="mid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, eid, edu, salary, address, languange, agerange, des, classify, mid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from position
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from position
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.nianzuochen.getajob.domain.dao.Position">
    insert into position (id, name, eid, 
      edu, salary, address, 
      languange, agerange, des, 
      classify, mid)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{eid,jdbcType=INTEGER}, 
      #{edu,jdbcType=VARCHAR}, #{salary,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{languange,jdbcType=VARCHAR}, #{agerange,jdbcType=VARCHAR}, #{des,jdbcType=VARCHAR}, 
      #{classify,jdbcType=VARCHAR}, #{mid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.nianzuochen.getajob.domain.dao.Position">
    insert into position
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="eid != null">
        eid,
      </if>
      <if test="edu != null">
        edu,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="languange != null">
        languange,
      </if>
      <if test="agerange != null">
        agerange,
      </if>
      <if test="des != null">
        des,
      </if>
      <if test="classify != null">
        classify,
      </if>
      <if test="mid != null">
        mid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="eid != null">
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="edu != null">
        #{edu,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="languange != null">
        #{languange,jdbcType=VARCHAR},
      </if>
      <if test="agerange != null">
        #{agerange,jdbcType=VARCHAR},
      </if>
      <if test="des != null">
        #{des,jdbcType=VARCHAR},
      </if>
      <if test="classify != null">
        #{classify,jdbcType=VARCHAR},
      </if>
      <if test="mid != null">
        #{mid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.nianzuochen.getajob.domain.dao.Position">
    update position
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="eid != null">
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="edu != null">
        edu = #{edu,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="languange != null">
        languange = #{languange,jdbcType=VARCHAR},
      </if>
      <if test="agerange != null">
        agerange = #{agerange,jdbcType=VARCHAR},
      </if>
      <if test="des != null">
        des = #{des,jdbcType=VARCHAR},
      </if>
      <if test="classify != null">
        classify = #{classify,jdbcType=VARCHAR},
      </if>
      <if test="mid != null">
        mid = #{mid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.nianzuochen.getajob.domain.dao.Position">
    update position
    set name = #{name,jdbcType=VARCHAR},
      eid = #{eid,jdbcType=INTEGER},
      edu = #{edu,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      languange = #{languange,jdbcType=VARCHAR},
      agerange = #{agerange,jdbcType=VARCHAR},
      des = #{des,jdbcType=VARCHAR},
      classify = #{classify,jdbcType=VARCHAR},
      mid = #{mid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>