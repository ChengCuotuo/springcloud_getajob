<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nianzuochen.getajob.mapper.TutorMapper">
  <resultMap id="BaseResultMap" type="cn.nianzuochen.getajob.domain.dao.Tutor">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="sch" jdbcType="VARCHAR" property="sch" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="lev" jdbcType="VARCHAR" property="lev" />
    <result column="account" jdbcType="INTEGER" property="account" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="edu" jdbcType="VARCHAR" property="edu" />
    <result column="pol" jdbcType="VARCHAR" property="pol" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="isDeleted" jdbcType="INTEGER" property="isDeleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userId, sch, job, tel, email, lev, account, gender, edu, pol, photo,des, isDeleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tutor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tutor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.nianzuochen.getajob.domain.dao.Tutor">
    insert into tutor (id, userId, sch, 
      job, tel, email, lev, 
      account, gender, edu, 
      pol, photo, des, isDeleted)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{sch,jdbcType=VARCHAR}, 
      #{job,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{lev,jdbcType=VARCHAR}, 
      #{account,jdbcType=INTEGER}, #{gender,jdbcType=VARCHAR}, #{edu,jdbcType=VARCHAR}, 
      #{pol,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, #{des,jdbcType=VARCHAR} #{isDeleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.nianzuochen.getajob.domain.dao.Tutor">
    insert into tutor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="sch != null">
        sch,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="lev != null">
        lev,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="edu != null">
        edu,
      </if>
      <if test="pol != null">
        pol,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="des != null">
        des,
      </if>
      <if test="isDeleted != null">
        isDeleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="sch != null">
        #{sch,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="lev != null">
        #{lev,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="edu != null">
        #{edu,jdbcType=VARCHAR},
      </if>
      <if test="pol != null">
        #{pol,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="des != null">
        #{des,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.nianzuochen.getajob.domain.dao.Tutor">
    update tutor
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="sch != null">
        sch = #{sch,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="lev != null">
        lev = #{lev,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="edu != null">
        edu = #{edu,jdbcType=VARCHAR},
      </if>
      <if test="pol != null">
        pol = #{pol,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="des != null">
        des = #{des,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        isDeleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.nianzuochen.getajob.domain.dao.Tutor">
    update tutor
    set userId = #{userid,jdbcType=INTEGER},
      sch = #{sch,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      lev = #{lev,jdbcType=VARCHAR},
      account = #{account,jdbcType=INTEGER},
      gender = #{gender,jdbcType=VARCHAR},
      edu = #{edu,jdbcType=VARCHAR},
      pol = #{pol,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      des = #{des,jdbcType=VARCHAR},
      isDeleted = #{isDeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectAllTutors" resultMap="BaseResultMap">
      select
      id, u.cname, t.userId, sch, job, tel, email, lev, account, gender, edu, pol, photo,des, isDeleted
      from tutor as t, userinfo as u
      where isDeleted != 1
      and u.userId = t.userId
      <if test="basicReq.tutorName != null and basicReq.tutorName!= ''">
        and u.cname like concat('%', concat(#{basicReq.tutorName,jdbcType=VARCHAR}, '%'))
      </if>
      <if test="basicReq.start != null and basicReq.size != null">
        limit ${basicReq.start},${basicReq.size}
      </if>
    </select>
    <select id="countAllTutors" resultType="java.lang.Integer">
      select count(id)
      from tutor
      where isDeleted != 1
    </select>
  <select id="selectAllSimpleTutors" resultType="cn.nianzuochen.getajob.domain.dto.SimpleTutor">
    select t.id as id, u.cname as cname, t.sch as sch
    from userinfo as u, tutor as t
    where u.userid = t.userid and t.isDeleted = 0
  </select>
  <update id="logicDeleteById">
    update tutor set isDeleted = 1, userId = 0 where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByUserId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tutor
    where userId = #{userId,jdbcType=INTEGER}
  </select>
</mapper>